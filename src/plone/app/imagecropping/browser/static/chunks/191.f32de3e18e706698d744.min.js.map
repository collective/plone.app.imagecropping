{"version":3,"file":"chunks/191.f32de3e18e706698d744.min.js","mappings":"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","sources":["webpack://plone-imagecropping/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://plone-imagecropping/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://plone-imagecropping/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://plone-imagecropping/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://plone-imagecropping/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://plone-imagecropping/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://plone-imagecropping/./node_modules/@patternslib/patternslib/src/core/registry.js"],"sourcesContent":["import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (!$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nconst event_listener_map = {};\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    if (!event_listener_map[el]) {\n        event_listener_map[el] = {};\n    }\n    event_listener_map[el][id] = [event_type, cb, opts.capture ? opts : undefined]; // prettier-ignore\n    el.addEventListener(event_type, cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} id - A unique id under which the event is registered.\n *\n */\nconst remove_event_listener = (el, id) => {\n    if (!el?.removeEventListener) {\n        return; // nothing to do.\n    }\n    const el_events = event_listener_map[el];\n    if (!el_events) {\n        return;\n    }\n    let entries;\n    if (id) {\n        // remove event listener with specific id\n        const entry = el_events[id];\n        entries = entry ? [entry] : [];\n    } else {\n        // remove all event listeners of element\n        entries = Object.entries(el_events);\n    }\n    for (const entry of entries || []) {\n        el.removeEventListener(entry[0], entry[1], entry[2]);\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) => pattern.one(\"init\", resolve));\n};\n\n/**\n * Event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = () => {\n    return new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n};\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * @param {Node} el - The DOM node to wrap.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {DOM element} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(DOM Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_data: get_data,\n    set_data: set_data,\n    template: template,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    // IE BUG : Placeholder text becomes actual value after deep clone on textarea\n    // https://connect.microsoft.com/IE/feedback/details/781612/placeholder-text-becomes-actual-value-after-deep-clone-on-textarea\n    if (window.document.documentMode) {\n        $clone.findInclusive(\":input[placeholder]\").each(function (i, item) {\n            var $item = $(item);\n            if ($item.attr(\"placeholder\") === $item.val()) {\n                $item.val(\"\");\n            }\n        });\n    }\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\nfunction elementInViewport(el) {\n    var rect = el.getBoundingClientRect(),\n        docEl = document.documentElement,\n        vWidth = window.innerWidth || docEl.clientWidth,\n        vHeight = window.innerHeight || docEl.clientHeight;\n\n    if (rect.right < 0 || rect.bottom < 0 || rect.left > vWidth || rect.top > vHeight)\n        return false;\n    return true;\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        let matcher = classes.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        matcher = matcher.replace(/[*]/g, \".*\");\n        matcher = new RegExp(\"^\" + matcher + \"$\");\n\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nconst debounce = (func, ms, timer = { timer: null }) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    //\n    return function () {\n        clearTimeout(timer.timer);\n        const args = arguments;\n        timer.timer = setTimeout(() => func.apply(this, args), ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See: https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    return (html || \"\")\n        .replace(/&/g, \"&amp;\") // needs to be first!\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See: https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    return (escaped_html || \"\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\nvar utils = {\n    // pattern pimping - own module?\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    elementInViewport: elementInViewport,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n};\n\nexport default utils;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        if (pattern.init) {\n            const plog = logging.getLogger(`pat.${name}`);\n            if ($el.is(pattern.trigger)) {\n                plog.debug(\"Initialising.\", $el);\n                try {\n                    pattern.init($el, null, trigger);\n                    plog.debug(\"done.\");\n                } catch (e) {\n                    if (dont_catch) {\n                        throw e;\n                    }\n                    plog.error(\"Caught error:\", e);\n                }\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n"],"names":["getOptions","$el","patternName","options","length","$","this","parent","elOptions","data","tmpOptions","split","i","item","reverse","key","pop","replace","value","join","log","logging","initBasePattern","trigger","jquery","name","prototype","plog","pattern","undefined","Registry","parser","mockupParser","e","error","Base","warn","el","defaults","init","emit","constructor","on","eventName","eventCallback","one","args","extend","patternProps","child","Error","Object","hasOwnProperty","call","apply","arguments","jquery_plugin","Surrogate","__super__","autoregister","root","writer","Function","bind","oThis","TypeError","aArgs","Array","slice","fToBind","fNOP","fBound","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","unshift","console","info","getLogger","path","route","entry","shift","push","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","debug","fatal","match","logconfig","exec","window","location","search","api","getWriter","event_listener_map","remove_event_listener","id","removeEventListener","el_events","entries","add_event_listener","event_type","cb","opts","addEventListener","capture","await_event","event_name","Promise","resolve","once","await_pattern_init","blur_event","Event","bubbles","cancelable","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","dom","toNodeArray","nodes","NodeList","querySelectorAllAndMe","selector","all","querySelectorAll","matches","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","closest","find_scoped","indexOf","document","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","body","overflow_y","includes","overflow_x","get_data","default_value","set_data","template","template_string","template_variables","events","$clone","clone","documentMode","findInclusive","each","$item","attr","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","utils","jqueryPlugin","escapeRegExp","str","source","prop","findLabel","input","$label","label","nodeType","tagName","form","elementInViewport","rect","getBoundingClientRect","docEl","documentElement","vWidth","innerWidth","clientWidth","vHeight","innerHeight","clientHeight","right","bottom","left","top","removeWildcardClass","targets","classes","ensureArray","classList","remove","matcher","RegExp","target","class_list","ok","filter","it","test","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","add","t","easing","complete","addURLQueryParameter","fullURL","param","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","keys","mergeStack","stack","results","frame","frame_length","x","isElementInViewport","partial","offset","rec","rec_values","every","hasValue","checked","selectedIndex","parseTime","time","m","amount","findRelatives","$relatives","$form","find","get_bounds","bounds","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","setTimeout","debounce","func","timer","clearTimeout","isIE","jqToNode","force_array","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","year","getFullYear","escape_html","html","unescape_html","escaped_html","is_iso_date_time","optional_time","re_date_time","is_iso_date","date_diff","date_1","date_2","utc_1","Date","UTC","utc_2","floor","getCSSValue","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","ready","sort","scan","clear","transformPattern","content","transform","initPattern","is","orderPatterns","splice","querySelector","selectors","map","register","plugin_name","p1"],"sourceRoot":""}